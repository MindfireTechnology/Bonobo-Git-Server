@using Bonobo.Git.Server.Extensions
@using MvcCheckBoxList.Model
@model Bonobo.Git.Server.Models.RepositoryDetailModel
@{
	ViewBag.Title = Resources.Repository_Create_Title;
}
<h1>@Resources.Repository_Create_Title</h1>

@using (Html.BeginForm("Create", "Repository", FormMethod.Post, new { @class = "pure-form pure-form-aligned", enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(false, Resources.Repository_Create_Fail)

	<fieldset>
		<div class="pure-control-group">
			@Html.LabelFor(m => m.Name)
			@Html.TextBoxFor(m => m.Name, new { autofocus = "" })<em>*</em>
			@Html.ValidationMessageFor(m => m.Name)
		</div>
		<div class="pure-control-group">
			@Html.LabelFor(m => m.Group)
			@Html.TextBoxFor(m => m.Group, new { @class = "medium" })
		</div>
		<div class="pure-control-group">
			@Html.LabelFor(m => m.Description)
			@Html.TextAreaFor(m => m.Description, new { @class = "medium" })
		</div>
		<div class="pure-control-group">
			@Html.LabelFor(m => m.Logo.PostedFile)
			<input type="file" name="Logo.PostedFile" id="Logo_PostedFile" />
			<sup>.png, .jpg, .jpeg, .gif</sup>
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(m => m.AllowAnonymous)
			@Html.CheckBoxFor(m => m.AllowAnonymous, new { @onClick = "document.getElementById('AllowAnonymousPush').disabled = !this.checked" })
			<i class="fa fa-info-circle" title="@Resources.Repository_AllowAnonymousHint"></i>
		</div>

		<div class="pure-control-group">
			@Html.LabelFor(m => m.AllowAnonymousPush)
			@{
				object attribs = new { @id = "AllowAnonymousPush" };
				if (!Model.AllowAnonymous)
				{
					attribs = new { @id = "AllowAnonymousPush", @disabled = "" };
				}
			}
			@Html.EnumDropDownListFor(m => m.AllowAnonymousPush, attribs)
			<i class="fa fa-info-circle" title="@Resources.Repository_AllowAnonymousPushHint"></i>
		</div>
		<div class="pure-control-group">
			@Html.LabelFor(m => m.LinksUseGlobal)
			@Html.CheckBoxFor(m => m.LinksUseGlobal, new { @onClick = "document.getElementById('LinksRegex').disabled = this.checked; document.getElementById('LinksUrl').disabled = this.checked" })
		</div>
		<div class="pure-control-group">
			@Html.LabelFor(m => m.LinksRegex)
			@{
				attribs = new { @class = "medium" };
				if (Model.LinksUseGlobal)
				{
					attribs = new { @class = "medium", disabled = "" };
				}
				@Html.TextBoxFor(m => m.LinksRegex, attribs);
				@Html.ValidationMessageFor(m => m.LinksRegex);
			}
		</div>
		<div class="pure-control-group">
			@Html.LabelFor(m => m.LinksUrl)
			@Html.TextBoxFor(m => m.LinksUrl, attribs)
			<i class="fa fa-info-circle" title="@Resources.Settings_Global_LinksUrl_Hint"></i>
		</div>
		<div class="pure-control-group">
			@Html.LabelFor(m => m.Administrators)
			<span class="multi-select">
				@*@Html.CheckBoxListFor(m => m.PostedSelectedAdministrators, m => m.AllAdministrators, m => m.Id, m => m.DisplayName, m => m.Administrators, Position.Vertical)*@
				<select id="select-admins" class="contacts selectized" placeholder="Pick some people to be admins..." multiple="multiple" tabindex="-1" style="display: none;" name="PostedSelectedAdministrators">
					@foreach (var administrators in Model.AllAdministrators)
					{
						<option value="@administrators.Id" data-email="@administrators.Email" data-name="@administrators.DisplayName" @(Model.Administrators.Any(n => n.Id == administrators.Id) ? "selected" : string.Empty)></option>
					}
				</select>
			</span>
			<i class="fa fa-info-circle" title="@Resources.Repository_AdministratorsHint"></i>
			@Html.ValidationMessageFor(m => m.Administrators)
		</div>

		<div class="pure-control-group checkboxlist">
			@Html.LabelFor(m => m.Teams)
			<span>
				@*@Html.CheckBoxListFor(m => m.PostedSelectedTeams, m => m.AllTeams, mm => mm.Id, mm => mm.DisplayName, mm => mm.Teams, Position.Vertical)*@
				<select id="select-teams" class="contacts selectized" placeholder="Pick some teams..." multiple="multiple" tabindex="-1" style="display: none;" name="PostedSelectedTeams">
					@foreach (var teams in Model.AllTeams)
					{
						<option value="@teams.Id" data-name="@teams.DisplayName" @(Model.Teams.Any(n => n.Id == teams.Id) ? "selected" : string.Empty)></option>
					}
				</select>
			</span>
			<i class="fa fa-info-circle" title="@Resources.Repository_TeamsHint"></i>
		</div>



		<div class="pure-controls">
			<a class="pure-button" href="@Url.Action("Index")"><i class="fa fa-long-arrow-left"></i> @Resources.Repository_Back</a>
			<button type="submit" class="pure-button pure-button-primary"><i class="fa fa-save"></i> @Resources.Repository_Create_Submit</button>
		</div>
	</fieldset>
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link rel="stylesheet" href="/Style/selectize.css" />
<script src="/Scripts/selectize.js"></script>
<script src="/Scripts/search.js"></script>
